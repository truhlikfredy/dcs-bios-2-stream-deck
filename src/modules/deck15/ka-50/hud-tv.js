const buttonLogic = require('../../buttonLogic.js')

module.exports = {
    name: 'hud-tv',
    buttons : [
        {   
            text: '<- Back',
            goToPage: 'default',
        },   
        {   
            type: buttonLogic.types.textToggle,
            scheme: buttonLogic.colorScheme.grayButton,
            sendState: true,
            text: 'Filter',
            apiSend: 'HUD_FILTER_HANDLE',
        },  
        {   
            type: buttonLogic.types.textToggle,
            defaultStatus: 0,
            scheme: buttonLogic.colorScheme.rotary,
            increment: -4091,
            maxStatus: 65535,
            overflow: false,
            text: '-\nHUD\nBright',
            apiSend: 'HUD_BRIGHTNESS',
            dynamicState: true,
        },
        {   
            type: buttonLogic.types.textToggle,
            defaultStatus: 0,
            scheme: buttonLogic.colorScheme.rotary,
            increment: +4091,
            maxStatus: 65535,
            overflow: false,
            text: '+\nHUD\nBright',
            apiSend: 'HUD_BRIGHTNESS',
            dynamicState: true,
        },  
        {   
            type: buttonLogic.types.textToggle,
            scheme: buttonLogic.colorScheme.switch,
            inversed: true,
            text: ['Night', 'Day', 'StandBy'],
            apiSend: 'HUD_MODE',
        },


        {   
            type: buttonLogic.types.textToggle,
            scheme: buttonLogic.colorScheme.switch,
            inversed: true,
            text: ['White', 'Black'],
            apiSend: 'SHKVAL_POLARITY',
        },                
        {   
            type: buttonLogic.types.textToggle,
            defaultStatus: 0,
            scheme: buttonLogic.colorScheme.rotary,
            increment: -4091,
            maxStatus: 65535,
            overflow: false,
            text: '-\nHMS',
            apiSend: 'HMS_BRIGHTNESS',
            dynamicState: true,
        },
        {   
            type: buttonLogic.types.textToggle,
            defaultStatus: 0,
            scheme: buttonLogic.colorScheme.rotary,
            increment: +4091,
            maxStatus: 65535,
            overflow: false,
            text: '+\nHMS',
            apiSend: 'HMS_BRIGHTNESS',
            dynamicState: true,
        },  
        {   
            type: buttonLogic.types.textToggle,
            defaultStatus: 0,
            scheme: buttonLogic.colorScheme.rotary,
            increment: -2041,
            maxStatus: 65535,
            overflow: false,
            text: '-\nShkval\nBright',
            apiSend: 'SHKVAL_BRIGHTNESS',
            dynamicState: true,
        },
        {   
            type: buttonLogic.types.textToggle,
            defaultStatus: 0,
            scheme: buttonLogic.colorScheme.rotary,
            increment: +2041,
            maxStatus: 65535,
            overflow: false,
            text: '+\nShkval\nBright',
            apiSend: 'SHKVAL_BRIGHTNESS',
            dynamicState: true,
        },  
        
        
        {   
            type: buttonLogic.types.textToggle,
            defaultStatus: 0,
            scheme: buttonLogic.colorScheme.rotary,
            increment: -2041,
            maxStatus: 65535,
            overflow: false,
            text: '-\nShkval\nContra',
            apiSend: 'SKHVAL_CONTRAST',
            dynamicState: true,
        },
        {   
            type: buttonLogic.types.textToggle,
            defaultStatus: 0,
            scheme: buttonLogic.colorScheme.rotary,
            increment: +2041,
            maxStatus: 65535,
            overflow: false,
            text: '+\nShkval\nContra',
            apiSend: 'SKHVAL_CONTRAST',
            dynamicState: true,
        },        {   
            type: buttonLogic.types.textToggle,
            scheme: buttonLogic.colorScheme.switch,
            inversed: true,
            text: ['Laser #1', 'Laser #2', 'Laser #3'],
            apiSend: 'LASER_CODE',
        },    
        {   
            type: buttonLogic.types.textToggle,
            scheme: buttonLogic.colorScheme.switch,
            inversed: true,
            text: ['Full H', 'Declu'],
            apiSend: 'HUD_DECLUTTER',
        },          
        {   
            text: 'Landing\nlights',
            goToPage: 'landingLights',
        },    
    ]
}